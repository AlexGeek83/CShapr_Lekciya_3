//ЦИКЛ FOR КОТОРЫЙ ВКЛЮЧАЕТ УЖЕ В СЕБЯ И СЧЕТЧИК I++, И ПРИСВАИВАНИЕ INT I = 0
// И УСЛОВИЕ I < 10

// ВЫПОЛНИЛИ 4 МЕТОД ИЗ ПАПКИ ВИДЫ МЕТОДОВ С ПОМОЩЬЮ ЦИКЛА FOR

string Method4(int count, string text) //Возвращать будем строку (в скобках тип данных)
// то есть строку string c будем компоновать count раз
{
    // БЫЛО - int i = 0;
    string result = String.Empty;  // переменная куда будем класть результат. "" - указывается пустая строка кавычками
    // или String.Empty, то есть result изначально будет пустой строкой
    for (int i = 0; i < count; i++)
    {
        result = result + text;
    }
    return result;
}
string res = Method4(10, "qwery");  // чтобы вызвать нужно указать переменную
// System.Console.WriteLine(res); // выводим на экран

//===============================================================================

// ЦИКЛЫ В ЦИКЛЕ НА ПРИМЕРЕ ПОСТРОЕНИЯ ТАБЛИЦЫ УМНОЖЕНИЯ

for(int i = 2; i <= 10; i++) // таблица умножения начинается с 2-х (i=2) и до 10 (i<=10)
{
    for(int j = 2; j <= 10; j++)
    {
//        System.Console.WriteLine($"{i} x {j} = {i*j}");
    }
 //   System.Console.WriteLine();
}





//=======================================================================
// Дан текст. В тексте нужно все проблелы заменить черточками, 
// маленькие бувы "к" заменить большими "К",
// а большие "С" заменить маленькими "с".

string text = "- Я думаю, - сказал князь, улыбаясь, - что, "
            + "ежели бы вас послали вместо нашего милого Винценгероде,"
            + "вы бы взяли приступом согласие прусского короля. "
            + "Вы так красноречивыю Вы дадите мне чаю?";
// string s = "qwerty"
//             012345
// s[3]  // r

string Replace(string text, char oldValue, char newValue)
//                        //старый символ// новый символ//
{
    string result = String.Empty; // инициализация пустой строки
    int Length = text.Length; // определяем длину строки
    for (int i = 0; i < Length; i++)
    {
        if (text[i] == oldValue) result = result + $"{newValue}";  //если текущий текст совпал с тем что мы хотим
        // заменить, то в результат положить новое значение строки
        else result = result + $"{text[i]}";
        // если же сопадений нет, то в result добавить текущий символ что и был ранее
    }


    return result;  // возвращаем результат
}       
string newText = Replace(text, ' ', '|');  // здесь указываем ЧТО НА ЧТО меняем
//System.Console.WriteLine(newText);
//System.Console.WriteLine(); // разделяем пустой строкой ТАК
newText = Replace(newText, 'к', 'К');
//System.Console.WriteLine(newText);
//System.Console.WriteLine(); // разделяем пустой строкой ТАК
newText = Replace(newText, 'С', 'с');
//System.Console.WriteLine(newText);




//=======================================================================
//Упорядочивание массива
// задача взять первый элемент сравнить и определить минимальный.
// после того как определили нужно максимальный переместить на место минимального и так далее
// повторять пока есть не отсортированные элементы

//для начала заведем массив, который и будем сортировать
int[] arr = {1, 5, 4, 3, 2, 6, 7, 1, 1};
// подзадача которая поможет вывести на экран
void PrintArray(int[] array)
{
    int count = array.Length; // считываем длину массива
    for (int i = 0; i < count; i++)
    {
        System.Console.Write($"{array[i]}");
    }
System.Console.WriteLine();
}
// задача (метод) которая будет упорядочивать наш массив
void SelectionSort(int[] array) // в качестве аргумента приходит массив array что выше указали
{
    for (int i = 0; i < array.Length; i++)
    {
        //определяем позицию на которой находится минимум
        int minPosition = i; 
        for (int j = i + 1; j < array.Length - 1; j++)
        {
            if(array[j] < array[minPosition]) minPosition = j;
        }



// ниже меняем текущую позицию с той которую мы нашли (минимальную) -
//  пример обмена 2-х переменных местами
        int temporary = array[i];   // присваиваем индексу значение -  временная переменная
        array[i] = array[minPosition];  // меняем позиции
        array[minPosition] = temporary;
    }

}
//Вызываем упорядочивание массива
PrintArray(arr);
SelectionSort(arr);

PrintArray(arr);
